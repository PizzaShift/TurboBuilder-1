{
    "$id": "http://example.com/root.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "type": "object",
    "title": "turbobuilder.json schema",
    "required": [
        "$schema",
        "metadata",
        "build"
    ],
    "additionalProperties": false, 
    "properties": {
        "$schema": {
            "type": "string",
            "description": "Url to the json schema definition to validate this file",
            "enum": ["https://raw.githubusercontent.com/edertone/TurboBuilder/master/TurboBuilder-Node/src/main/resources/json-schema/turbobuilder.schema.json"]
        },
        "metadata": {
            "type": "object",
            "description": "Contains information about the project",
            "required": [
                "builderVersion"
            ],
            "additionalProperties": false, 
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The project name"
                },
                "description": {
                    "type": "string",
                    "description": "The project description"
                },
                "builderVersion": {
                    "type": "string",
                    "description": "The turbo builder version that is used by this project"
                }
            }
        },
        "validate": {
            "type": "object",
            "description": "The Validate Schema",
            "additionalProperties": false,
            "properties": {
                "runBeforeBuild": {
                    "type": "boolean",
                    "description": "The Runbeforebuild Schema"
                },
                "projectStructure": {
                    "type": "object",
                    "description": "Defines validations related to the project files and folders structure",
                    "additionalProperties": false, 
                    "properties": {
                        "readmeFileMandatory": {
                            "type": "boolean",
                            "description": "If set to true, the README.md file will be mandatory at the root of the project"
                        },
                        "extrasFolderMandatory": {
                            "type": "boolean",
                            "description": "If set to true, the extras folder will be mandatory at the root of the project"
                        },
                        "extrasSubFoldersMandatory": {
                            "type": "array",
                            "description": "Defines a list of folder names that must exist inside the extras folder",
                            "items": {
                                "type": "string",
                                "description": "A sub folder name"
                            }
                        },
                        "extrasTodoExtension": {
                            "type": "boolean",
                            "description": "If set to true, all files inside the extras/todo folder must have a .todo extension"
                        }
                    }
                },
                "styleSheets": {
                    "type": "object",
                    "description": "Defines validations related to the project css style sheets",
                    "additionalProperties": false, 
                    "properties": {
                        "onlyScss": {
                            "type": "boolean",
                            "description": "If enabled, only scss files will be allowed for stylesheets on the project"
                        },
                        "noCssHardcodedColors": {
                            "type": "boolean",
                            "description": "If enabled, no hardcoded colors will be accepted on the project css files. Use a palete with variables instead"
                        }
                    }
                },
                "phpNamespaces": {
                    "type": "object",
                    "description": "The Phpnamespaces Schema",
                    "required": [
                        "enabled",
                        "mandatory",
                        "mustContain",
                        "excludes"
                    ],
                    "additionalProperties": false, 
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "The Enabled Schema"
                        },
                        "mandatory": {
                            "type": "boolean",
                            "description": "The Mandatory Schema"
                        },
                        "mustContain": {
                            "type": "array",
                            "description": "The Mustcontain Schema",
                            "items": {
                                "type": "string",
                                "description": "The Items Schema"
                            }
                        },
                        "excludes": {
                            "type": "array",
                            "description": "The Excludes Schema",
                            "items": {
                                "type": "string",
                                "description": "The Items Schema"
                            }
                        }
                    }
                },
                "copyrightHeaders": {
                    "type": "array",
                    "description": "The Copyrightheaders Schema",
                    "items": {
                        "type": "object",
                        "description": "The Items Schema",
                        "required": [
                            "path",
                            "appliesTo",
                            "includes",
                            "excludes"
                        ],
                        "additionalProperties": false, 
                        "properties": {
                            "path": {
                                "type": "string",
                                "description": "The Path Schema"
                            },
                            "appliesTo": {
                                "type": "string",
                                "description": "The Appliesto Schema"
                            },
                            "includes": {
                                "type": "array",
                                "description": "The Includes Schema",
                                "items": {
                                    "type": "string",
                                    "description": "The Items Schema"
                                }
                            },
                            "excludes": {
                                "type": "array",
                                "description": "The Excludes Schema",
                                "items": {
                                    "type": "string",
                                    "description": "The Items Schema"
                                }
                            }
                        }
                    }
                },
                "sitePhp": {
                    "type": "object",
                    "description": "The Sitephp Schema",
                    "required": [
                        "jsUseStrict"
                    ],
                    "additionalProperties": false, 
                    "properties": {
                        "jsUseStrict": {
                            "type": "boolean",
                            "description": "If enabled, all project js files must start with 'use strict'"
                        }
                    }
                }
            }
        },
        "build": {
            "type": "object",
            "description": "Defines the parameters for the build process",
            "oneOf": [
                {"required": ["site_php"]},
                {"required": ["lib_php"]},
                {"required": ["lib_java"]},
                {"required": ["lib_js"]},
                {"required": ["lib_ts"]},
                {"required": ["lib_angular"]},
                {"required": ["app_angular"]}
            ],
            "additionalProperties": false, 
            "properties": {
                "printTodoFiles": {
                    "type": "boolean",
                    "description": "If enabled, the contents of all the files on the extras/todo folder will be displayed as part of the build console output"
                },
                "replaceVersion": {
                    "type": "object",
                    "description": "This feature allows us to replace a specific wildcard with the current project version number on all the specified file types as part of the build and release processes",
                    "required": [
                        "enabled",
                        "wildCard",
                        "extensions"
                    ],
                    "additionalProperties": false, 
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enables or disables the replace version feature"
                        },
                        "wildCard": {
                            "type": "string",
                            "description": "A pattern to search on the specified file extensions which will be replaced with the project version number"
                        },
                        "extensions": {
                            "type": "array",
                            "description": "List of file extensions where the wildcard search and replacement will be performed ('php', 'js', 'json', etc...)"
                        }
                    }
                },
                "site_php": {
                    "type": "object",
                    "description": "A php website project type",
                    "additionalProperties": false
                },
                "lib_php": {
                    "type": "object",
                    "description": "The Lib_php Schema",
                    "additionalProperties": false, 
                    "properties": {
                        "createPhar": {
                            "type": "boolean",
                            "description": "The Createphar Schema"
                        }
                    }
                },
                "lib_java": {
                    "type": "object",
                    "description": "The Lib_java Schema",
                    "additionalProperties": false,
                    "properties": {
                        "createJar": {
                            "type": "boolean",
                            "description": "The Createjar Schema"
                        }
                    }
                },
                "lib_js": {
                    "type": "object",
                    "description": "A project that contains javascript files and generates a reusable js library",
                    "required": [
                        "deleteNonMergedJs",
                        "createMergedFile",
                        "mergedFileName"
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "deleteNonMergedJs": {
                            "type": "boolean",
                            "description": "If set to true, no source js files will be copied to the dist folder"
                        },
                        "createMergedFile": {
                            "type": "boolean",
                            "description": "If set to true, all source js files will be merged into the specified mergedFileName file"
                        },
                        "mergedFileName": {
                            "type": "string",
                            "description": "Defines the name for the js file that contains all the library merged code. Extension (.js) must not be written here. If left empty, the project name will be used by default"
                        }
                    }
                },
                "lib_ts": {
                    "type": "object",
                    "description": "A typescript library project type",
                    "additionalProperties": false,
                    "properties": {
                        "declaration": {
                            "type": "boolean",
                            "description": "The Declaration Schema"
                        },
                        "strict": {
                            "type": "boolean",
                            "description": "The Strict Schema"
                        },
                        "sourceMap": {
                            "type": "boolean",
                            "description": "The Sourcemap Schema"
                        },
                        "targets": {
                            "type": "array",
                            "description": "The Targets Schema",
                            "items": {
                                "type": "object",
                                "description": "The Items Schema",
                                "required": [
                                    "folder",
                                    "jsTarget"
                                ],
                                "additionalProperties": false, 
                                "properties": {
                                    "folder": {
                                        "type": "string",
                                        "description": "TODO"
                                    },
                                    "jsTarget": {
                                        "type": "string",
                                        "description": "TODO"
                                    },
                                    "mergedFile": {
                                        "type": "string",
                                        "description": "Defines the name for the js file that contains all the library code merged for this specific ES target. Extension (.js) must not be written here"
                                    },
                                    "globalVar": {
                                        "type": "string",
                                        "description": "Defines the name of the global namespace variable that will be generated to contain the compiled library code. This can then be safely used along with other libraries without danger of collision cause all the classes and methods will be declared under this global variable"
                                    }
                                }
                            }
                        }
                    }
                },
                "lib_angular": {
                    "type": "object",
                    "description": "An angular library project type",
                    "additionalProperties": false
                },
                "app_angular": {
                    "type": "object",
                    "description": "An angular application project type",
                    "additionalProperties": false
                }
            }
        },
        "release": {
            "type": "object",
            "description": "The Release Schema",
            "required": [
            ],
            "additionalProperties": false, 
            "properties": {
                "printTodoFiles": {
                    "type": "boolean",
                    "description": "If enabled, the contents of all the files on the extras/todo folder will be displayed as part of the release console output"
                },
                "gitChangeLog": {
                    "type": "boolean",
                    "description": "If enabled, a Changelog.txt file containing the list of recent GIT changes will be generated inside the release folder"
                },
                "gitChangeLogCount": {
                    "type": "integer",
                    "description": "Defines the number of most recent tags to be included into the GIT change log file"
                },
                "optimizePictures": {
                    "type": "boolean",
                    "description": "If enabled, all project pictures will be optimized to be as small as possible into the release folder"
                },
                "generateCodeDocumentation": {
                    "type": "boolean",
                    "description": "If enabled, a docs folder will be created into the release destination containing auto generted code documentation for the project languages"
                }
            }
        },
        "sync": {
            "type": "object",
            "description": "Defines the parameters for the sync process",
            "anyOf": [
                {
                    "type": "object",
                    "minProperties": 7,
                    "additionalProperties": false, 
                    "properties": {
                        "runAfterBuild": {
                            "type": "boolean",
                            "description": "If enabled, this sync task will be executed automatically after each build"
                        },
                        "type": {
                            "type": "string",
                            "description": "Defines the type of task to execute: an ftp or fileSystem synchronization",
                            "enum": ["fileSystem"]
                        },
                        "excludes": {
                            "type": "array",
                            "description": "List of string patterns that will be used to exclude files or folders from the sync task.",
                            "items": {
                                "type": "string"
                            }
                        },
                        "sourcePath": {
                            "type": "string",
                            "description": "A path relative to the defined source root where the files to be synced are located"
                        },
                        "destPath": {
                            "type": "string",
                            "description": "A file system path where the source files will be copied"
                        },
                        "remoteUrl": {
                            "type": "string",
                            "description": "The root url from where the synchronized files will be accessible via web browser"
                        },
                        "deleteDestPathContents": {
                            "type": "boolean",
                            "description": "If set to true, all files found on the destPath will be deleted before executing the sync"
                        }
                    }
                },
                {
                    "type": "object",
                    "minProperties": 9,
                    "additionalProperties": false, 
                    "properties": {
                        "runAfterBuild": {
                            "type": "boolean",
                            "description": "If enabled, this sync task will be executed automatically after each build"
                        },
                        "type": {
                            "type": "string",
                            "description": "Defines the type of task to execute: an ftp or fileSystem synchronization",
                            "enum": ["ftp"]
                        },
                        "excludes": {
                            "type": "array",
                            "description": "List of string patterns that will be used to exclude files or folders from the sync task.",
                            "items": {
                                "type": "string"
                            }
                        },
                        "sourcePath": {
                            "type": "string",
                            "description": "A path relative to the defined source root where the files to be synced are located"
                        },
                        "remotePath": {
                            "type": "string",
                            "description": "A path relative to the remote host where the files will be synchronized"
                        },
                        "remoteUrl": {
                            "type": "string",
                            "description": "The root url from where the synchronized files will be accessible via web browser"
                        },
                        "host": {
                            "type": "string",
                            "description": "A remote host where the files will be synchronized"
                        },
                        "user": {
                            "type": "string",
                            "description": "The remote user"
                        },
                        "psw": {
                            "type": "string",
                            "description": "The remote password"
                        }
                    }
                }
            ]
        },
        "test": {
            "type": "array",
            "description": "Defines the parameters for the test process",
            "items": {
                "anyOf": [
                    {
                        "type": "object",
                        "required": ["type", "testsRoot", "coverageReport", "coverageReportOpenAfterTests"],
                        "additionalProperties": false, 
                        "properties": {
                            "type": {"type": "string"},
                            "testsRoot": {"type": "string"},
                            "coverageReport": {"type": "boolean"},
                            "coverageReportOpenAfterTests": {"type": "boolean"}
                        }
                    },
                    {
                        "type": "object",
                        "required": ["type", "jasmineConfig"],
                        "additionalProperties": false, 
                        "properties": {
                            "type": {"type": "string"},
                            "jasmineConfig": {"type": "string"}
                        }
                    },
                    {
                        "type": "object",
                        "required": ["type", "testsRoot", "httpServerPort", "targets", "browsers"],
                        "additionalProperties": false, 
                        "properties": {
                            "type": {"type": "string"},
                            "testsRoot": {"type": "string"},
                            "httpServerPort": {"type": "string"},
                            "targets": {"type": "array"},
                            "browsers": {"type": "object"}
                        }
                    }
                ]
            }
        }
    }
}